package(default_visibility = ["//visibility:public"])

load(
    "@rules_elm//elm:def.bzl",
    "elm_dependencies",
    "elm_make",
)

elm_dependencies(
    name = "deps",
    elm_json = "elm.json",
)

elm_make(
    name = "mainjs",
    srcs = glob(["elm-src/**"]),
    elm_home = ":deps",
    elm_json = "elm.json",
    main = "elm-src/Main.elm",
    output = "static/javascript/main.js",
    visibility = ["//visibility:public"],
)

load(
    "@rules_haskell//haskell:defs.bzl",
    "haskell_library",
    "haskell_binary",
)

load(
    "//:build/common.bzl",
    "GHC_FLAGS",
)

load(
    "//build/rules/haskell:def.bzl",
    "paths_module",
)

haskell_library(
    name = "salary-graph-library",
    src_strip_prefix = "src",
    srcs = glob(["src/**/*.hs"]),
    deps = [
        "@stackage//:aeson",
        "@stackage//:base",
        "@stackage//:bytestring",
        "@stackage//:containers",
        "@stackage//:directory",
        "@stackage//:elm-bridge",
        "@stackage//:file-embed",
        "@stackage//:filepath",
        "@stackage//:fsnotify",
        "@stackage//:http-api-data",
        "@stackage//:http-media",
        "@stackage//:servant-elm",
        "@stackage//:servant-server",
        "@stackage//:stm",
    ],
    extra_srcs = [
        "static/index.html",
        ":mainjs",
    ],
    compiler_flags = ["-DMAINJS_FILE=\"$(execpath :mainjs)\""] + GHC_FLAGS,
)

paths_module(
    name = "paths_module",
    package = "salary-graph",
    version = "1.0.0",
)

haskell_binary(
    name = "salary-graph",
    srcs = glob(["app/server/**/*.hs"]),
    deps = [
        ":salary-graph-library",
        ":paths_module",
        "@stackage//:base",
        "@stackage//:servant-server",
        "@stackage//:warp",
    ],
    compiler_flags = GHC_FLAGS,
)

haskell_binary(
    name = "generateElm",
    srcs = glob(["app/generate/**/*.hs"]),
    deps = [
        ":salary-graph-library",
        "@stackage//:base",
        "@stackage//:elm-bridge",
        "@stackage//:servant-elm",
        "@stackage//:servant-server",
    ],
    compiler_flags = GHC_FLAGS,
)

load(
    "@rules_pkg//:pkg.bzl",
    "pkg_tar",
)
load(
    "@io_bazel_rules_docker//container:container.bzl",
    "container_image",
    "container_push",
)

pkg_tar(
    name = "bin",
    srcs = [":salary-graph"],
    mode = "0755",
    package_dir = "/usr/local/bin",
)

container_image(
    name = "image",
    base = "@ubuntu_for_haskell//image",
    tars = [":bin"],
    entrypoint = ["/usr/local/bin/salary-graph"],
)

container_push(
    name = "push",
    format = "Docker",
    image = ":image",
    registry = "ghcr.io",
    repository = "matsubara0507/salary-graph",
)
